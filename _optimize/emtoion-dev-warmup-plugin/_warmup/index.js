(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.handler = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';const aws=require("aws-sdk");aws.config.region="us-east-1";const lambda=new aws.Lambda,functions=[{name:"emtoion-dev-index",config:{enabled:["production","staging","dev"],payload:"{\"source\":\"serverless-plugin-warmup\"}",concurrency:1}}];module.exports.warmUp=async()=>{console.log("Warm Up Start");const invokes=await Promise.all(functions.map(async func=>{let concurrency;const functionConcurrency=process.env[`WARMUP_CONCURRENCY_${func.name.toUpperCase().replace(/-/g,"_")}`];functionConcurrency?(concurrency=parseInt(functionConcurrency),console.log(`Warming up function: ${func.name} with concurrency: ${concurrency} (from function-specific environment variable)`)):process.env.WARMUP_CONCURRENCY?(concurrency=parseInt(process.env.WARMUP_CONCURRENCY),console.log(`Warming up function: ${func.name} with concurrency: ${concurrency} (from global environment variable)`)):(concurrency=parseInt(func.config.concurrency),console.log(`Warming up function: ${func.name} with concurrency: ${concurrency}`));const clientContext=func.config.clientContext===void 0?func.config.payload:func.config.clientContext,params={ClientContext:clientContext?Buffer.from(`{"custom":${clientContext}}`).toString("base64"):void 0,FunctionName:func.name,InvocationType:"RequestResponse",LogType:"None",Qualifier:process.env.SERVERLESS_ALIAS||"$LATEST",Payload:func.config.payload};try{return await Promise.all(Array(concurrency).fill(0).map(async()=>await lambda.invoke(params).promise())),console.log(`Warm Up Invoke Success: ${func.name}`),!0}catch(e){return console.log(`Warm Up Invoke Error: ${func.name}`,e),!1}}));console.log(`Warm Up Finished with ${invokes.filter(r=>!r).length} invoke errors`)};

},{"aws-sdk":undefined}]},{},[1])(1)
});
